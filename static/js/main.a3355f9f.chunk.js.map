{"version":3,"sources":["libs/responsive-tools/breakpoints.ts","libs/responsive-tools/browser.js","app/main/Header.tsx","app/main/Thumbnail.tsx","app/main/Thumbnails.tsx","app/main/Footer.tsx","utils/helpers.ts","app/main/Toggle.tsx","app/main/Main.tsx","app/viewer/Slide.tsx","app/viewer/Toggle.tsx","app/viewer/Viewer.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["breakpoints","_","name","version","os","osVersion","touch","mobile","_canUse","canUse","p","document","createElement","e","style","up","charAt","toUpperCase","slice","init","x","y","a","i","ua","navigator","userAgent","length","match","parseFloat","RegExp","$1","v","replace","msMaxTouchPoints","window","list","media","events","addEventListener","poll","active","query","breakpoint","op","units","substr","undefined","Array","isArray","parseInt","isNaN","String","matchMedia","matches","on","handler","push","state","__","Header","headline","description","id","Thumbnail","ReactDOM","this","refs","focus","className","props","isActive","ref","onClick","handleClick","bind","href","image","full","data-index","index","src","thumb","alt","event","preventDefault","stopPropagation","isLocked","blur","onThumbnailClick","React","Thumbnails","thumbnails","images","forEach","key","current","Footer","hasClass","el","classList","contains","addClass","add","removeClass","remove","reg","addEvent","object","type","callback","attachEvent","Toggle","toggle","onTouchEnd","handleTouchEnd","body","showMain","hideMain","ControlPanel","onTouchStart","handleTouchStart","onTouchMove","handleTouchMove","mainData","setState","touchPosX","touches","pageX","touchPosY","pageY","diffX","diffY","result","settings","mainSide","main","th","offsetHeight","ts","scrollHeight","scrollTop","Slide","slideClass","isLoadingImage","nextProps","imgStyle","backgroundImage","backgroundPosition","position","detachCurrentImage","title","onLoad","handleImageLoaded","display","setTimeout","onLock","Viewer","currentImage","nextState","prevProps","prevState","handleNext","handlePrevious","viewer","width","slide","App","locked","switchTo","keys","27","handleToggle","38","handleUp","40","handleDown","32","39","37","querySelectorAll","keyCode","removeEventListener","handleResize","handleThumbnailClick","viewerWidth","handleLock","mainEl","mainWidth","innerWidth","noHide","c","l","tpr","thumbnailsPerRow","Component","Boolean","location","hostname","xlarge","large","medium","small","xsmall","resizeTimeout","preload","slideDuration","layoutDuration","onload","Math","max","clearTimeout","Promise","all","fetch","process","then","r","json","console","log","render","StrictMode","getElementById","catch","warn","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a3355f9f.chunk.js","sourcesContent":["/* \n Based on breakpoints.js v1.0 | @ajlkn | MIT licensed \n*/\n\ntype BreakpointType = 'xlarge' | 'large' | 'medium' | 'small' | 'xsmall';\n\ninterface BreakpointObjectEvent {\n  query: string;\n  handler: () => void;\n  state: boolean;\n}\n\ninterface BreakpointObject {\n  list: {\n    [key in BreakpointType]: [string | null, string | null] | string;\n  };\n  events: BreakpointObjectEvent[];\n  media: {\n    [x: string]: string | boolean;\n  };\n}\n\n\n\nexport const breakpoints = (function () {\n  const _ = {\n    /**\n     * List.\n     * @var {array}\n     */\n    list: null as BreakpointObject['list'] | null,\n\n    /**\n     * Media cache.\n     * @var {object}\n     */\n    media: {} as BreakpointObject['media'],\n\n    /**\n     * Events.\n     * @var {array}\n     */\n    events: [] as BreakpointObject['events'],\n\n    /**\n     * Initialize.\n     * @param {array} list List.\n     */\n    init: function (list: BreakpointObject['list']) {\n      // Set list.\n      _.list = list;\n\n      // Add event listeners.\n      window.addEventListener('resize', _.poll);\n      window.addEventListener('orientationchange', _.poll);\n      window.addEventListener('load', _.poll);\n      window.addEventListener('fullscreenchange', _.poll);\n    },\n\n    /**\n     * Determines if a given query is active.\n     * @param {string} query Query.\n     * @return {bool} True if yes, false if no.\n     */\n    active: function (query: string) {\n      let breakpoint: BreakpointType;\n      let media: string | false = false;\n      let op, a, x, y, units;\n\n      // Media for this query doesn't exist? Generate it.\n      if (!(query in _.media)) {\n        // Determine operator, breakpoint.\n\n        // Greater than or equal.\n        if (query.substr(0, 2) === '>=') {\n          op = 'gte';\n          breakpoint = query.substr(2) as BreakpointType;\n        }\n\n        // Less than or equal.\n        else if (query.substr(0, 2) === '<=') {\n          op = 'lte';\n          breakpoint = query.substr(2) as BreakpointType;\n        }\n\n        // Greater than.\n        else if (query.substr(0, 1) === '>') {\n          op = 'gt';\n          breakpoint = query.substr(1) as BreakpointType;\n        }\n\n        // Less than.\n        else if (query.substr(0, 1) === '<') {\n          op = 'lt';\n          breakpoint = query.substr(1) as BreakpointType;\n        }\n\n        // Not.\n        else if (query.substr(0, 1) === '!') {\n          op = 'not';\n          breakpoint = query.substr(1) as BreakpointType;\n        }\n\n        // Equal.\n        else {\n          op = 'eq';\n          breakpoint = query as BreakpointType;\n        }\n\n        // Build media.\n        if (breakpoint !== undefined && _.list !== null && breakpoint in _.list) {\n          a = _.list[breakpoint];\n\n          // Range.\n          if (Array.isArray(a) && a[0] && a[1]) {\n            x = parseInt(a[0]);\n            y = parseInt(a[1]);\n\n            if (!isNaN(x)) {\n              units = a[0].substr(String(x).length);\n            } else if (!isNaN(y)) {\n              units = a[1].substr(String(y).length);\n            } else return;\n\n            // Max only.\n            if (isNaN(x)) {\n              switch (op) {\n                // Greater than or equal (>= 0 / anything)\n                case 'gte':\n                  media = 'screen';\n                  break;\n\n                // Less than or equal (<= y)\n                case 'lte':\n                  media = 'screen and (max-width: ' + y + units + ')';\n                  break;\n\n                // Greater than (> y)\n                case 'gt':\n                  media = 'screen and (min-width: ' + (y + 1) + units + ')';\n                  break;\n\n                // Less than (< 0 / invalid)\n                case 'lt':\n                  media = 'screen and (max-width: -1px)';\n                  break;\n\n                // Not (> y)\n                case 'not':\n                  media = 'screen and (min-width: ' + (y + 1) + units + ')';\n                  break;\n\n                // Equal (<= y)\n                default:\n                  media = 'screen and (max-width: ' + y + units + ')';\n                  break;\n              }\n            }\n\n            // Min only.\n            else if (isNaN(y)) {\n              switch (op) {\n                // Greater than or equal (>= x)\n                case 'gte':\n                  media = 'screen and (min-width: ' + x + units + ')';\n                  break;\n\n                // Less than or equal (<= inf / anything)\n                case 'lte':\n                  media = 'screen';\n                  break;\n\n                // Greater than (> inf / invalid)\n                case 'gt':\n                  media = 'screen and (max-width: -1px)';\n                  break;\n\n                // Less than (< x)\n                case 'lt':\n                  media = 'screen and (max-width: ' + (x - 1) + units + ')';\n                  break;\n\n                // Not (< x)\n                case 'not':\n                  media = 'screen and (max-width: ' + (x - 1) + units + ')';\n                  break;\n\n                // Equal (>= x)\n                default:\n                  media = 'screen and (min-width: ' + x + units + ')';\n                  break;\n              }\n            }\n\n            // Min and max.\n            else {\n              switch (op) {\n                // Greater than or equal.\n                case 'gte':\n                  media = 'screen and (min-width: ' + x + units + ')';\n                  break;\n\n                // Less than or equal.\n                case 'lte':\n                  media = 'screen and (max-width: ' + y + units + ')';\n                  break;\n\n                // Greater than.\n                case 'gt':\n                  media = 'screen and (min-width: ' + (y + 1) + units + ')';\n                  break;\n\n                // Less than.\n                case 'lt':\n                  media = 'screen and (max-width: ' + (x - 1) + units + ')';\n                  break;\n\n                // Not.\n                case 'not':\n                  media =\n                    'screen and (max-width: ' + (x - 1) + units + '), screen and (min-width: ' + (y + 1) + units + ')';\n                  break;\n\n                // Equal.\n                default:\n                  media = 'screen and (min-width: ' + x + units + ') and (max-width: ' + y + units + ')';\n                  break;\n              }\n            }\n          }\n          // String.\n          else if (typeof a === 'string') {\n            // Missing a media type? Prefix with \"screen\".\n            if (a.charAt(0) === '(') {\n              media = 'screen and ' + a;\n            }\n            // Otherwise, use as-is.\n            else media = a;\n          }\n        }\n\n        // Cache.\n        _.media[query] = media ? media : false;\n      }\n\n      return _.media[query] === false ? false : window.matchMedia(String(_.media[query])).matches;\n    },\n\n    /**\n     * Registers an event.\n     * @param {string} query Query.\n     * @param {function} handler Handler.\n     */\n    on: function (query: string, handler: () => void) {\n      // Register event.\n      _.events.push({\n        query: query,\n        handler: handler,\n        state: false,\n      });\n\n      // Query active *right now*? Call handler.\n      if (_.active(query)) handler();\n    },\n\n    /**\n     * Polls for events.\n     */\n    poll: function () {\n      // let i, e;\n      let e: BreakpointObjectEvent;\n      // Step through events.\n      for (let i = 0; i < _.events.length; i++) {\n        // Get event.\n        e = _.events[i];\n\n        // Active?\n        if (_.active(e.query)) {\n          // Hasn't been called yet?\n          if (!e.state) {\n            // Mark as called.\n            e.state = true;\n\n            // Call handler.\n            e.handler();\n          }\n        }\n\n        // Otherwise ...\n        else {\n          // Previously called?\n          if (e.state) {\n            // Unmark as called.\n            e.state = false;\n          }\n        }\n      }\n    },\n  };\n\n  function __(list: BreakpointObject['list']) {\n    _.init(list);\n  }\n  __._ = _;\n  __.on = function (query: string, handler: () => void) {\n    _.on(query, handler);\n  };\n  __.active = function (query: string) {\n    return _.active(query);\n  };\n  return __;\n})();\n\n// UMD Wrapper (github.com/umdjs/umd/blob/master/returnExports.js | @umdjs + @nason)\n// (function(root, factory) {\n\n// \t// AMD.\n// \t\tif (typeof define === 'function' && define.amd)\n// \t\t\tdefine([], factory);\n\n// \t// Node.\n// \t\telse if (typeof exports === 'object')\n// \t\t\tmodule.exports = factory();\n\n// \t// Breakpoints global.\n// \t\telse\n// \t\t\troot.breakpoints = factory();\n\n// }(this, function() { return breakpoints; }));\n","/* browser.js v1.0 | @ajlkn | MIT licensed */\n\nexport const browser = (function () {\n  var _ = {\n    /**\n     * Name.\n     * @var {string}\n     */\n    name: null,\n\n    /**\n     * Version.\n     * @var {float}\n     */\n    version: null,\n\n    /**\n     * OS.\n     * @var {string}\n     */\n    os: null,\n\n    /**\n     * OS version.\n     * @var {float}\n     */\n    osVersion: null,\n\n    /**\n     * Touch.\n     * @var {bool}\n     */\n    touch: null,\n\n    /**\n     * Mobile.\n     * @var {bool}\n     */\n    mobile: null,\n\n    /**\n     * Temporary element for canUse()\n     * @var {DOMElement}\n     */\n    _canUse: null,\n\n    /**\n     * Determines if the browser supports a given property.\n     * @param {string} p Property.\n     * @return {bool} True if property is supported, false if not.\n     */\n    canUse: function (p) {\n      // Create temporary element if it doesn't already exist.\n      if (!_._canUse) _._canUse = document.createElement('div');\n\n      // Check for property.\n      var e = _._canUse.style,\n        up = p.charAt(0).toUpperCase() + p.slice(1);\n\n      return p in e || 'Moz' + up in e || 'Webkit' + up in e || 'O' + up in e || 'ms' + up in e;\n    },\n\n    /**\n     * Initialize.\n     */\n    init: function () {\n      var x,\n        y,\n        a,\n        i,\n        ua = navigator.userAgent;\n\n      // name, version.\n      x = 'other';\n      y = 0;\n      a = [\n        ['firefox', /Firefox\\/([0-9\\.]+)/],\n        ['bb', /BlackBerry.+Version\\/([0-9\\.]+)/],\n        ['bb', /BB[0-9]+.+Version\\/([0-9\\.]+)/],\n        ['opera', /OPR\\/([0-9\\.]+)/],\n        ['opera', /Opera\\/([0-9\\.]+)/],\n        ['edge', /Edge\\/([0-9\\.]+)/],\n        ['safari', /Version\\/([0-9\\.]+).+Safari/],\n        ['chrome', /Chrome\\/([0-9\\.]+)/],\n        ['ie', /MSIE ([0-9]+)/],\n        ['ie', /Trident\\/.+rv:([0-9]+)/],\n      ];\n\n      for (i = 0; i < a.length; i++) {\n        if (ua.match(a[i][1])) {\n          x = a[i][0];\n          y = parseFloat(RegExp.$1);\n\n          break;\n        }\n      }\n\n      _.name = x;\n      _.version = y;\n\n      // os, osVersion.\n      x = 'other';\n      y = 0;\n      a = [\n        [\n          'ios',\n          /([0-9_]+) like Mac OS X/,\n          function (v) {\n            return v.replace('_', '.').replace('_', '');\n          },\n        ],\n        [\n          'ios',\n          /CPU like Mac OS X/,\n          function (v) {\n            return 0;\n          },\n        ],\n        ['wp', /Windows Phone ([0-9\\.]+)/, null],\n        ['android', /Android ([0-9\\.]+)/, null],\n        [\n          'mac',\n          /Macintosh.+Mac OS X ([0-9_]+)/,\n          function (v) {\n            return v.replace('_', '.').replace('_', '');\n          },\n        ],\n        ['windows', /Windows NT ([0-9\\.]+)/, null],\n        ['bb', /BlackBerry.+Version\\/([0-9\\.]+)/, null],\n        ['bb', /BB[0-9]+.+Version\\/([0-9\\.]+)/, null],\n        ['linux', /Linux/, null],\n        ['bsd', /BSD/, null],\n        ['unix', /X11/, null],\n      ];\n\n      for (i = 0; i < a.length; i++) {\n        if (ua.match(a[i][1])) {\n          x = a[i][0];\n          y = parseFloat(a[i][2] ? a[i][2](RegExp.$1) : RegExp.$1);\n\n          break;\n        }\n      }\n\n      _.os = x;\n      _.osVersion = y;\n\n      // touch.\n      _.touch = _.os == 'wp' ? navigator.msMaxTouchPoints > 0 : !!('ontouchstart' in window);\n\n      // mobile.\n      _.mobile = _.os == 'wp' || _.os == 'android' || _.os == 'ios' || _.os == 'bb';\n    },\n  };\n  _.init();\n  return _;\n})();\n\n// UMD Wrapper (github.com/umdjs/umd/blob/master/returnExports.js | @umdjs + @nason)\n// (function(root, factory) {\n\n// \t// AMD.\n// \t\tif (typeof define === 'function' && define.amd)\n// \t\t\tdefine([], factory);\n\n// \t// Node.\n// \t\telse if (typeof exports === 'object')\n// \t\t\tmodule.exports = factory();\n\n// \t// Browser global.\n// \t\telse\n// \t\t\troot.browser = factory();\n\n// }(this, function() { return browser; }));\n","import * as React from 'react';\nimport { Main } from '../../interfaces/Main';\n\ninterface HeaderProps {\n  headline: Main['headline'];\n  description: Main['description'];\n}\n\nexport const Header: React.FunctionComponent<HeaderProps> = ({ headline, description }) => {\n  return (\n    <header id=\"header\">\n      <h1>{headline}</h1>\n      <p>{description}</p>\n    </header>\n  );\n};\n\n// <ul class=\"icons\">\n//     <li><a href=\"#\" class=\"icon fa-twitter\"><span class=\"label\">Twitter</span></a></li>\n//     <li><a href=\"#\" class=\"icon fa-instagram\"><span class=\"label\">Instagram</span></a></li>\n//     <li><a href=\"#\" class=\"icon fa-github\"><span class=\"label\">Github</span></a></li>\n//     <li><a href=\"#\" class=\"icon fa-envelope-o\"><span class=\"label\">Email</span></a></li>\n// </ul>\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {Image} from '../../interfaces/Image';\n\ninterface IThumbnailProps {\n    image: Image;\n    index: number;\n    key: number;\n    isActive: boolean;\n    isLocked: boolean;\n    onThumbnailClick: (index: number) => void;\n}\n\nexport class Thumbnail extends React.Component<IThumbnailProps, any>{\n\n    componentDidMount() {\n        (ReactDOM.findDOMNode(this.refs['article']) as HTMLDivElement).focus();\n    }\n\n    render() {\n        return (\n            <article className={this.props.isActive ? \"active\" : \"\"} ref=\"article\" onClick={this.handleClick.bind(this) }>\n                    <a className=\"thumbnail\" href={this.props.image.full} data-index={this.props.index}>\n                        <img src={this.props.image.thumb} alt=\"\" />\n                        </a>\n            </article>\n        );\n    }\n\n    handleClick(event: React.MouseEvent) {\n        // Stop other events.\n        event.preventDefault();\n        event.stopPropagation();\n            \n        // Locked? Blur.\n        if (this.props.isLocked) {\n            (ReactDOM.findDOMNode(this.refs['article']) as HTMLDivElement).blur();\n        }\n        else {\n            this.props.onThumbnailClick(this.props.index);\n        }\n    }\n}\n\n                // <article className={this.props.isActive?\"active\":\"\"} ref=\"article\">\n                //     <a className=\"thumbnail\" href={this.props.image.fulls} data-position={this.props.image.position} data-index={this.props.index}>\n                //         <img src={this.props.image.thumbs} alt=\"\" />\n                //     </a>\n                //     <h2>{this.props.image.h2}</h2>\n                //     <p>{this.props.image.p}</p>\n                // </article>\n\n\t\t\t// _.$thumbnails\n\t\t\t// \t.on('click', '.thumbnail', function(event) {\n\n\t\t\t// \t\tvar $this = $(this);\n\n\t\t\t// \t\t// Stop other events.\n\t\t\t// \t\t\tevent.preventDefault();\n\t\t\t// \t\t\tevent.stopPropagation();\n\n\t\t\t// \t\t// Locked? Blur.\n\t\t\t// \t\t\tif (_.locked)\n\t\t\t// \t\t\t\t$this.blur();\n\n\t\t\t// \t\t// Switch to this thumbnail's slide.\n\t\t\t// \t\t\t_.switchTo($this.data('index'));\n\n\t\t\t// \t});\n\n\n\n            // <% htmlWebpackPlugin.options.images.forEach(function(n){ %>\n            //     <article>\n            //         <a class=\"thumbnail\" href=\"<%=n.fulls%>\" data-position=\"left center\"><img src=\"<%=n.thumbs%>\" alt=\"\" /></a>\n            //         <h2><%=n.h2%></h2>\n            //         <p>\n            //             <%=n.p%>\n            //         </p>\n            //     </article>\n            //     <% }) %>","import * as React from 'react';\nimport {Thumbnail} from './Thumbnail';\nimport {Image} from '../../interfaces/Image';\n\ninterface IThumbnailsProps {\n    images: Image[];\n    current: number | null;\n    isLocked: boolean;\n    onThumbnailClick: (index:number) => void;\n}\n\n\nexport class Thumbnails extends React.Component<IThumbnailsProps, any>{\n    render() {\n        let thumbnails: JSX.Element[] = [];\n        this.props.images.forEach((image, index)=>{\n            thumbnails.push(\n                <Thumbnail image={image} index={index} key={index} isActive={this.props.current===index} isLocked={this.props.isLocked} onThumbnailClick={this.props.onThumbnailClick}/>\n            );\n        });\n        return (\n            <section id=\"thumbnails\">\n                {thumbnails}\n            </section>\n        );\n    }\n}","import * as React from 'react';\n\nexport class Footer extends React.Component<any, any>{\n    render() {\n        return (\n            <footer id=\"footer\">\n                <ul className=\"copyright\">\n                    <li>&copy; scenery</li>\n                </ul>\n            </footer>\n        );\n    }\n}\n\n","export function hasClass(el: HTMLElement, className: string) {\n  if (el.classList) return el.classList.contains(className);\n  else return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n}\n\nexport function addClass(el: HTMLElement, className: string) {\n  if (el.classList) el.classList.add(className);\n  else if (!hasClass(el, className)) el.className += ' ' + className;\n}\n\nexport function removeClass(el: HTMLElement, className: string) {\n  if (el.classList) el.classList.remove(className);\n  else if (hasClass(el, className)) {\n    var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n    el.className = el.className.replace(reg, ' ');\n  }\n}\n\n/**\n * Add an Event Listener to the object or element\n *\n * object: the element or window object\n * type: resize, scroll (event type)\n * callback: the function reference\n */\nexport function addEvent(object: Element | Window, type: string, callback: EventListenerOrEventListenerObject) {\n  if (object == null || typeof object == 'undefined') return;\n  if (object.addEventListener) {\n    object.addEventListener(type, callback, false);\n  } else if ('attachEvent' in object) {\n    (object as any).attachEvent('on' + type, callback);\n  } else {\n    (object as any)['on' + type] = callback;\n  }\n}\n","import * as React from 'react';\nimport { hasClass } from '../../utils/helpers';\n\ninterface IToggleProps{\n    hideMain: () => void;\n    showMain: () => void;\n}\n\nexport class Toggle extends React.Component<IToggleProps,any>{\n    render(){\n        return(\n            <div className=\"toggle\" onClick={this.toggle.bind(this)} onTouchEnd={this.handleTouchEnd.bind(this)}></div>\n        );\n    }\n    \n    /**\n\t * Toggles main wrapper.\n\t */\n    toggle() {\n        if (hasClass(document.body, 'fullscreen')) {\n            this.props.showMain();\n        }\n        else {\n            this.props.hideMain();\n        }\n    }\n\n    // Prevent event from bubbling up to \"hide event on tap\" event.\n\thandleTouchEnd(event: React.TouchEvent) {\n        event.stopPropagation();\n\t}\n} ","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Header } from './Header';\nimport { Thumbnails } from './Thumbnails';\nimport { Footer } from './Footer';\nimport { Toggle } from './Toggle';\nimport { Image } from '../../interfaces/Image';\nimport { breakpoints } from '../../libs/responsive-tools/breakpoints';\nimport { Main } from '../../interfaces/Main';\n\ninterface IMainProps {\n  images: Image[];\n  mainData: Main;\n  ref: any;\n  current: number | null;\n  isLocked: boolean;\n  settings: any;\n  onThumbnailClick: (index: number) => void;\n  hideMain: () => void;\n  showMain: () => void;\n}\n\ninterface IMainState {\n  touchPosX: number;\n  touchPosY: number;\n}\n\nexport class ControlPanel extends React.Component<IMainProps, IMainState> {\n  render() {\n    return (\n      <div id=\"main\" ref=\"main\" onTouchStart={this.handleTouchStart.bind(this)} onTouchMove={this.handleTouchMove.bind(this)}>\n        <Header headline={this.props.mainData.headline} description={this.props.mainData.description} />\n        <Thumbnails\n          images={this.props.images}\n          current={this.props.current}\n          isLocked={this.props.isLocked}\n          onThumbnailClick={this.props.onThumbnailClick}\n        />\n        <Footer />\n        <Toggle hideMain={this.props.hideMain} showMain={this.props.showMain} />\n      </div>\n    );\n  }\n\n  /**\n   * Touch gestures.\n   */\n  handleTouchStart(event: React.TouchEvent<HTMLDivElement>) {\n    // Bail on xsmall.\n    if (breakpoints.active('<=xsmall')) return;\n\n    // Record start position.\n    this.setState({\n      touchPosX: event.touches[0].pageX,\n      touchPosY: event.touches[0].pageY,\n    });\n  }\n\n  /**\n   * Touch gestures.\n   */\n  handleTouchMove(event: React.TouchEvent<HTMLDivElement>) {\n    // Bail on xsmall.\n    if (breakpoints.active('<=xsmall')) return;\n\n    // No start position recorded? Bail.\n    if (this.state.touchPosX === null || this.state.touchPosY === null) return;\n\n    // Calculate stuff.\n    let diffX = this.state.touchPosX - event.touches[0].pageX;\n    let diffY = this.state.touchPosY - event.touches[0].pageY;\n    let boundary = 20;\n    let delta = 50;\n    let result = false;\n\n    // Swipe to close.\n    switch (this.props.settings.mainSide) {\n      case 'left':\n        result = diffY < boundary && diffY > -1 * boundary && diffX > delta;\n        break;\n\n      case 'right':\n        result = diffY < boundary && diffY > -1 * boundary && diffX < -1 * delta;\n        break;\n\n      default:\n        break;\n    }\n\n    if (result) this.props.hideMain();\n\n    // Overscroll fix.\n    let main = ReactDOM.findDOMNode(this.refs['main']) as HTMLDivElement;\n    let th = main.offsetHeight;\n    let ts = main.scrollHeight - main.scrollTop;\n\n    if ((main.scrollTop <= 0 && diffY < 0) || (ts > th - 2 && ts < th + 2 && diffY > 0)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import * as React from 'react';\nimport { Image } from '../../interfaces/Image';\n\ninterface ISlideProps {\n  image: Image;\n  onLock: (isLocked: boolean) => void;\n  detachCurrentImage: boolean;\n}\n\ninterface ISlideState {\n  slideClass: string;\n  isLoadingImage?: boolean;\n}\n\nexport class Slide extends React.Component<ISlideProps, ISlideState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      slideClass: 'slide loading',\n      isLoadingImage: true,\n    };\n  }\n\n  // Before update component\n  componentWillReceiveProps(nextProps: ISlideProps) {\n    if (nextProps.image !== this.props.image) {\n      this.setState({\n        slideClass: 'slide loading',\n      });\n    }\n  }\n\n  render() {\n    // Set background stuff\n    let imgStyle = {\n      backgroundImage: 'url(' + this.props.image.full + ')',\n      backgroundPosition: this.props.image.position || 'center',\n    };\n\n    return (\n      <div className={this.props.detachCurrentImage ? 'slide' : this.state.slideClass}>\n        <div className=\"caption\">\n          <h2>{this.props.image.title}</h2>\n          <p>{this.props.image.description}</p>\n        </div>\n        <div className=\"image\" style={imgStyle}></div>\n        <img src={this.props.image.full} onLoad={this.handleImageLoaded.bind(this)} style={{ display: 'none' }} />\n      </div>\n    );\n  }\n\n  handleImageLoaded() {\n    window.setTimeout(() => {\n      this.setState({\n        slideClass: 'slide active',\n        isLoadingImage: false,\n      });\n      this.props.onLock(false);\n    }, 0);\n  }\n}\n\n// <img src={this.props.image.fulls} onLoad={this.handleImageLoaded.bind(this)} />\n","import * as React from 'react';\nimport { hasClass } from '../../utils/helpers';\n\ninterface IToggleProps{\n    hideMain: () => void;\n    showMain: () => void;\n}\n\nexport class Toggle extends React.Component<IToggleProps,any>{\n    render(){\n        return(\n            <div className=\"toggle\" onClick={this.toggle.bind(this)} onTouchEnd={this.handleTouchEnd.bind(this)}></div>\n        );\n    }\n    \n    /**\n\t * Toggles main wrapper.\n\t */\n\ttoggle() {\n         if (hasClass(document.body, 'fullscreen')) {\n             this.props.showMain();\n         }\n         else {\n            this.props.hideMain();\n         }\n\t}\n    \n    // Prevent event from bubbling up to \"hide event on tap\" event.\n\thandleTouchEnd(event: React.TouchEvent) {\n        event.stopPropagation();\n\t}  \n} ","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slide } from './Slide';\nimport { Image } from '../../interfaces/Image';\nimport { Toggle } from './Toggle';\nimport { breakpoints } from '../../libs/responsive-tools/breakpoints';\n\ninterface IViewerProps {\n  image: Image;\n  width?: number;\n  isLocked: boolean;\n  onLock: (isLocked: boolean) => void;\n  hideMain: () => void;\n  showMain: () => void;\n  handleNext: () => void;\n  handlePrevious: () => void;\n}\n\ninterface IViewerState {\n  newImage?: Image;\n  currentImage: Image;\n  detachCurrentImage: boolean;\n  touchPosX?: number;\n  touchPosY?: number;\n}\n\nexport class Viewer extends React.Component<IViewerProps, IViewerState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      currentImage: props.image,\n      detachCurrentImage: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps: IViewerProps, nextState: IViewerState) {\n    // If component did't lock we will not rerender Viewer\n    if (!nextProps.isLocked) {\n      return false;\n    }\n\n    // console.log(\"\\n shouldComponentUpdate\");\n    // console.log(\"|||||||||||||||||||||||| nextProps===this.props \" + (nextProps === this.props));\n    // console.log(\"|||||||||||||||||||||||| nextState.detachCurrentImage \" + nextState.detachCurrentImage);\n    // console.log(\"|||||||||||||||||||||||| this.state.detachCurrentImage \" + this.state.detachCurrentImage);\n\n    // Detach the current image\n    if (nextState.detachCurrentImage) {\n      // console.log(\"Detach the current image\");\n      return true;\n    }\n\n    // If we get a new image. We have to detach the current image.\n    if (nextState.currentImage !== nextProps.image) {\n      //  console.log(\"We have to detach the current image\");\n      this.setState({\n        detachCurrentImage: true,\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps: IViewerProps, prevState: IViewerState) {\n    // console.log(\"\\n componentDidUpdate \");\n    // console.log(\"|||||||||||||||||||||||| prevProps===this.props \" + (prevProps === this.props));\n    // console.log(\"|||||||||||||||||||||||| prevState.detachCurrentImage \" + prevState.detachCurrentImage);\n    // console.log(\"|||||||||||||||||||||||| this.state.detachCurrentImage \" + this.state.detachCurrentImage);\n\n    //  If we detached current image, we have to show a new image\n    if (this.state.detachCurrentImage) {\n      // set timeout\n      window.setTimeout(() => {\n        // set the new state detachCurrentImage to false and show a new image\n        this.setState({\n          currentImage: this.props.image,\n          detachCurrentImage: false,\n        });\n      }, 500);\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Hide main wrapper on tap (<= medium only).\n   */\n  handleTouchEnd() {\n    if (breakpoints.active('<=medium')) {\n      this.props.hideMain();\n    }\n  }\n\n  /**\n   * Touch gestures.\n   */\n  handleTouchStart(event: React.TouchEvent) {\n    // Record start position.\n    this.setState({\n      touchPosX: event.touches[0].pageX,\n      touchPosY: event.touches[0].pageY,\n    });\n  }\n\n  /**\n   * Touch gestures.\n   */\n  handleTouchMove(event: React.TouchEvent) {\n    // No start position recorded? Bail.\n    if (this.state.touchPosX === undefined || this.state.touchPosY === undefined) {\n      return;\n    }\n\n    // Calculate stuff.\n    let diffX = this.state.touchPosX - event.touches[0].pageX;\n    let diffY = this.state.touchPosY - event.touches[0].pageY;\n    let boundary = 20;\n    let delta = 50;\n\n    // Swipe left (next).\n    if (diffY < boundary && diffY > -1 * boundary && diffX > delta) {\n      this.props.handleNext();\n    }\n\n    // Swipe right (previous).\n    else if (diffY < boundary && diffY > -1 * boundary && diffX < -1 * delta) {\n      this.props.handlePrevious();\n    }\n\n    // Overscroll fix.\n    let viewer = ReactDOM.findDOMNode(this.refs['viewer']) as HTMLDivElement;\n    let th = viewer.offsetHeight;\n    let ts = viewer.scrollHeight - viewer.scrollTop;\n\n    if ((viewer.scrollTop <= 0 && diffY < 0) || (ts > th - 2 && ts < th + 2 && diffY > 0)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  render() {\n    // console.log(\"\\n render\");\n    // console.log(\"|||||||||||||||||||||||| currentImage=\"+ (this.state.currentImage===null? \"null\":this.state.currentImage.h2));\n    // console.log(\"|||||||||||||||||||||||| this.props.image=\"+ (this.props.image===null? \"null\":this.props.image.h2));\n    // console.log(\"|||||||||||||||||||||||| detachCurrentImage=\" + this.state.detachCurrentImage);\n\n    let style = {\n      width: this.props.width || '',\n    };\n\n    let slide =\n      this.state.currentImage !== null ? (\n        <Slide image={this.state.currentImage} onLock={this.props.onLock} detachCurrentImage={this.state.detachCurrentImage} />\n      ) : (\n        ''\n      );\n\n    return (\n      <div\n        id=\"viewer\"\n        ref=\"viewer\"\n        style={style}\n        onTouchStart={this.handleTouchStart.bind(this)}\n        onTouchEnd={this.handleTouchEnd.bind(this)}\n        onTouchMove={this.handleTouchMove.bind(this)}\n      >\n        <div className=\"inner\">\n          <div className=\"nav-next\" onClick={this.props.handleNext}></div>\n          <div className=\"nav-previous\" onClick={this.props.handlePrevious}></div>\n          <Toggle hideMain={this.props.hideMain} showMain={this.props.showMain} />\n        </div>\n        {slide}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nimport * as ReactDOM from 'react-dom';\nimport { ControlPanel } from './main/Main';\nimport { Viewer } from './viewer/Viewer';\nimport { Image } from '../interfaces/Image';\nimport { breakpoints } from '../libs/responsive-tools/breakpoints';\nimport { addEvent, removeClass, hasClass, addClass } from '../utils/helpers';\nimport { Main } from '../interfaces/Main';\n\ninterface IGalleryProps {\n  main: Main;\n  images: Image[];\n  settings: any;\n}\n\ninterface IGalleryState {\n  viewerWidth?: number;\n  current: number | null; //Current slide index.\n  locked: boolean; //Lock state.\n  isDeactivateSlide?: boolean;\n}\n\nexport class App extends React.Component<IGalleryProps, IGalleryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      locked: false,\n      current: null,\n    };\n  }\n\n  componentDidMount() {\n    // // IE<9: Fix viewer width (no calc support).\n    // if (skel.vars.IEVersion < 9) {\n    //     let windowIE8:any = window;\n    //     windowIE8.attachEvent('resize', this.handleResize);\n    // }\n\n    // Initial slide.\n    window.setTimeout(() => {\n      // // Show first slide if xsmall isn't active or it just deactivated.\n      // skel.on('-xsmall !xsmall', () => {\n      //     if (this.state.current === null) {\n      //         this.switchTo(0, true);\n      //     }\n      // });\n\n      // Show first slide if xsmall isn't active.\n      breakpoints.on('>xsmall', () => {\n        if (this.state.current === null) this.switchTo(0, true);\n      });\n    }, 0);\n\n    /*\n     * Keyboard shortcuts.\n     */\n    let keys: { [n: number]: () => void } = {\n      // Escape: Toggle main wrapper.\n      27: () => {\n        this.handleToggle();\n      },\n\n      // Up: Move up.\n      38: () => {\n        this.handleUp();\n      },\n\n      // Down: Move down.\n      40: () => {\n        this.handleDown();\n      },\n\n      // Space: Next.\n      32: () => {\n        this.handleNext();\n      },\n\n      // Right Arrow: Next.\n      39: () => {\n        this.handleNext();\n      },\n\n      // Left Arrow: Previous.\n      37: () => {\n        this.handlePrevious();\n      },\n    };\n\n    // Find Elements IE8+\n    let elements = document.body.querySelectorAll('input,select,textarea');\n    elements.forEach((\n      el // Ignore shortcuts within form elements.\n    ) =>\n      addEvent(el, 'keydown', function (event) {\n        event.stopPropagation();\n      })\n    );\n\n    // Keyboard shortcuts. Add event to window.\n    addEvent(window, 'keydown', function (event: Event | KeyboardEvent) {\n      // Ignore if xsmall is active.\n      if (breakpoints.active('<=xsmall')) return;\n\n      // Check keycode.\n      if ('keyCode' in event && event.keyCode in keys) {\n        // Stop other events.\n        event.stopPropagation();\n        event.preventDefault();\n\n        // Call shortcut.\n        keys[event.keyCode]();\n      }\n\n      // // Ignore if xsmall is active.\n      // if (breakpoint('xsmall').active) return;\n\n      // // Check keycode.\n      // if (event.keyCode in keys) {\n      //   // Stop other events.\n      //   event.stopPropagation();\n      //   event.preventDefault();\n      //   // Call shortcut.\n      //   keys[event.keyCode]();\n      // }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    let image: Image = this.props.images[this.state.current || 0];\n\n    return (\n      <div>\n        <ControlPanel\n          images={this.props.images}\n          isLocked={this.state.locked}\n          current={this.state.current}\n          ref=\"main\"\n          onThumbnailClick={this.handleThumbnailClick.bind(this)}\n          hideMain={this.hideMain.bind(this)}\n          showMain={this.showMain.bind(this)}\n          settings={this.props.settings}\n          mainData={this.props.main}\n        />\n        <Viewer\n          width={this.state.viewerWidth}\n          image={image}\n          onLock={this.handleLock.bind(this)}\n          isLocked={this.state.locked}\n          hideMain={this.hideMain.bind(this)}\n          showMain={this.showMain.bind(this)}\n          handleNext={this.handleNext.bind(this)}\n          handlePrevious={this.handlePrevious.bind(this)}\n        />\n      </div>\n    );\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  handleResize() {\n    const mainEl = ReactDOM.findDOMNode(this.refs['main']);\n    if (mainEl && 'offsetWidth' in mainEl) {\n      let mainWidth = mainEl['offsetWidth']; // ReactDOM.findDOMNode(this).clientWidth;// this.refs['main'].getDOMNode().offsetWidth;\n      window.setTimeout(() => {\n        this.setState({\n          viewerWidth: window.innerWidth - mainWidth,\n        });\n      }, 100);\n    }\n  }\n\n  handleLock(isLocked: boolean) {\n    this.setState({\n      locked: isLocked,\n    });\n  }\n\n  handleThumbnailClick(index: number) {\n    // Switch to this thumbnail's slide.\n    this.switchTo(index);\n  }\n\n  /**\n   * Switch to a specific slide.\n   */\n  switchTo(index: number, noHide?: boolean) {\n    // Already at index and xsmall isn't active? Bail.\n    if (this.state.current === index && !breakpoints.active('<=xsmall')) return;\n\n    // Locked? Bail.\n    if (this.state.locked) {\n      return;\n    }\n\n    // Hide main wrapper if medium is active.\n    if (!noHide && breakpoints.active('<=medium')) this.hideMain();\n\n    // window.setTimeout(() => {\n    // Update current.\n    this.setState({\n      current: index,\n      locked: true,\n    });\n    // }, 100);\n  }\n\n  /**\n   * Hides the main wrapper.\n   */\n  hideMain() {\n    removeClass(document.body, 'is-loading-0');\n\n    // Already hidden? Bail.\n    if (hasClass(document.body, 'fullscreen')) {\n      return;\n    }\n\n    // Hide main wrapper.\n    addClass(document.body, 'fullscreen');\n\n    // Blur.\n    const mainEl = ReactDOM.findDOMNode(this.refs['main']) as HTMLElement;\n    if(mainEl){\n      mainEl.blur();\n    }\n  }\n\n  /**\n   * Shows the main wrapper.\n   */\n  showMain() {\n    // Already visible? Bail.\n    if (!hasClass(document.body, 'fullscreen')) {\n      return;\n    }\n\n    // Show main wrapper.\n    removeClass(document.body, 'fullscreen');\n\n    // Focus.\n    (ReactDOM.findDOMNode(this.refs['main']) as HTMLDivElement).focus();\n  }\n\n  /**\n   * Switches to the next slide.\n   */\n  handleNext() {\n    // Calculate new index.\n    let i;\n    let c = this.state.current || 0;\n    let l = this.props.images.length;\n\n    if (c >= l - 1) i = 0;\n    else i = c + 1;\n\n    // Switch.\n    this.switchTo(i);\n  }\n\n  /**\n   * Switches to the previous slide.\n   */\n  handlePrevious() {\n    // Calculate new index.\n    let i;\n    let c = this.state.current || 0;\n    let l = this.props.images.length;\n\n    if (c <= 0) i = l - 1;\n    else i = c - 1;\n\n    // Switch.\n    this.switchTo(i);\n  }\n\n  /**\n   * Switches to slide \"below\" current.\n   */\n  handleDown() {\n    // Fullscreen? Bail.\n    if (hasClass(document.body, 'fullscreen')) {\n      return;\n    }\n\n    // Calculate new index.\n    let i;\n    let c = this.state.current || 0;\n    let l = this.props.images.length;\n    let tpr = this.props.settings.thumbnailsPerRow;\n\n    if (c >= l - tpr) i = c - l + tpr;\n    else i = c + tpr;\n\n    // Switch.\n    this.switchTo(i);\n  }\n\n  /**\n   * Switches to slide \"above\" current.\n   */\n  handleUp() {\n    // Fullscreen? Bail.\n    if (hasClass(document.body, 'fullscreen')) {\n      return;\n    }\n\n    // Calculate new index.\n    let i;\n    let c = this.state.current || 0;\n    let l = this.props.images.length;\n    let tpr = this.props.settings.thumbnailsPerRow;\n\n    if (c <= tpr - 1) i = l - (tpr - 1 - c) - 1;\n    else i = c - tpr;\n\n    // Switch.\n    this.switchTo(i);\n  }\n\n  /**\n   * Toggles main wrapper.\n   */\n  handleToggle() {\n    if (hasClass(document.body, 'fullscreen')) {\n      this.showMain();\n    } else {\n      this.hideMain();\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './libs/responsive-tools/browser';\nimport { breakpoints } from './libs/responsive-tools/breakpoints';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { removeClass, addEvent, addClass } from './utils/helpers';\n\nimport './assets/styles/main.scss';\nimport { Image } from './interfaces/Image';\nimport { Main } from './interfaces/Main';\n\n// Breakpoints.\nbreakpoints({\n  xlarge: ['1281px', '1680px'],\n  large: ['981px', '1280px'],\n  medium: ['737px', '980px'],\n  small: ['481px', '736px'],\n  xsmall: [null, '480px'],\n});\n\nconst settings = {\n  // Preload all images.\n  preload: false,\n\n  // Slide duration (must match \"duration.slide\" in _vars.scss).\n  slideDuration: 500,\n\n  // Layout duration (must match \"duration.layout\" in _vars.scss).\n  layoutDuration: 750,\n\n  // Thumbnails per \"row\" (must match \"misc.thumbnails-per-row\" in _vars.scss).\n  thumbnailsPerRow: 2,\n\n  // Side of main wrapper (must match \"misc.main-side\" in _vars.scss).\n  mainSide: 'right',\n};\n\n// Remove is-loading-* classes on load.\nwindow.onload = function () {\n  removeClass(document.body, 'is-loading-0');\n\n  window.setTimeout(function () {\n    removeClass(document.body, 'is-loading-1');\n  }, 100);\n\n  window.setTimeout(function () {\n    removeClass(document.body, 'is-loading-2');\n  }, 100 + Math.max(settings.layoutDuration - 150, 0));\n};\n\n// Disable animations/transitions on resize.\nlet resizeTimeout: number;\naddEvent(window, 'resize', (event) => {\n  addClass(document.body, 'is-loading-0');\n  window.clearTimeout(resizeTimeout);\n\n  resizeTimeout = window.setTimeout(() => {\n    removeClass(document.body, 'is-loading-0');\n  }, 100);\n});\n\nPromise.all([fetch(`${process.env.REACT_APP_DATA}/main.json`), fetch(`${process.env.REACT_APP_DATA}/images.json`)])\n  .then((r) => Promise.all([r[0].json(), r[1].json()]) as Promise<[Main, Image[]]>)\n  .then(([main, images]) => {\n    document.title = main.title;\n\n    console.log('index', breakpoints._.list);\n\n    ReactDOM.render(\n      <React.StrictMode>\n        <App main={main} settings={settings} images={images} />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  })\n  .catch((e) => console.warn(e));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}